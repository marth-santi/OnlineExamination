{"version":3,"sources":["CONST.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BASE_URL","window","location","origin","CONST","API","test","getExam","App","useState","data","setData","data2","useEffect","fetch","CONSTANT","then","res","a","text","json","console","log","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAAIA,G,MAAWC,OAAOC,SAASC,QAQhBC,EAPD,CACZC,IAAK,CACHC,KAAK,GAAD,OAAKN,EAAL,sBACJO,QAAQ,GAAD,OAAKP,EAAL,2B,OCgCIQ,MAhCf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAuBb,OAvBa,KAGbC,qBAAU,WACRC,MAAMC,EAASV,IAAIC,MAChBU,KADH,uCAEI,WAAOC,GAAP,SAAAC,EAAA,+EACSD,EAAIE,QADb,2CAFJ,uDAMGH,MAAK,SAACN,GACLC,EAAQD,MAEZI,MAAMC,EAASV,IAAIE,SAChBS,KADH,uCAEI,WAAOC,GAAP,SAAAC,EAAA,+EACSD,EAAIG,QADb,2CAFJ,uDAMGJ,MAAK,SAACJ,GACLS,QAAQC,IAAIV,SAIhB,sBAAKW,UAAU,MAAf,iCAEE,4BAAIb,IACJ,4BAAIE,QCjBKY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.da66d0cb.chunk.js","sourcesContent":["var BASE_URL = window.location.origin;\nconst CONST = {\n  API: {\n    test: `${BASE_URL}/api/students/test`,\n    getExam: `${BASE_URL}/api/students/getExam`,\n  },\n};\n\nexport default CONST;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport CONSTANT from \"./CONST\";\n\nfunction App() {\n  const [data, setData] = useState(\"\");\n  const [data2, setData2] = useState(\"\");\n  useEffect(() => {\n    fetch(CONSTANT.API.test)\n      .then(\n        async (res: Response): Promise<string> => {\n          return res.text();\n        }\n      )\n      .then((data: string): void => {\n        setData(data);\n      });\n    fetch(CONSTANT.API.getExam)\n      .then(\n        async (res: Response): Promise<string> => {\n          return res.json();\n        }\n      )\n      .then((data2: any): void => {\n        console.log(data2);\n      });\n  });\n  return (\n    <div className=\"App\">\n      Hello from React App\n      <p>{data}</p>\n      <p>{data2}</p>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}